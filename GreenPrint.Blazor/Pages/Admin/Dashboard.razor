@using GreenPrint.Blazor.Models

@page "/Admin/Dashboard"

<div class="container">
    <div class="row border-bottom border-primary">
        <h1>Admin panel</h1>
    </div>

    <div class="row mt-3 justify-content-evenly">

        <div class="col-2 p-1">
            <RadzenButton Icon="support_agent" Text="Customers" ButtonStyle="ButtonStyle.Primary" />
        </div>

        <div class="col-2 p-1">
            <RadzenButton Icon="people" Text="Users" ButtonStyle="ButtonStyle.Primary" />
        </div>

        <div class="col-2 p-1">
            <RadzenButton Icon="admin_panel_settingse" Text="Roles" ButtonStyle="ButtonStyle.Primary" />
        </div>

        <div class="col-2 p-1">
            <RadzenButton Icon="receipt_long" Text="All Orders" ButtonStyle="ButtonStyle.Primary" />
        </div>

        <div class="col-2 p-1">
            <RadzenButton Icon="add" Text="Add Product" ButtonStyle="ButtonStyle.Primary" Click=@CreateItem />
        </div>
    </div>

    <RadzenTabs RenderMode="TabRenderMode.Client">
        <Tabs>
            <RadzenTabsItem Text="Categories">
                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                                Data="@Categories" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
                    <Columns>
                        <RadzenDataGridColumn Property="Id" Filterable="false" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn Property="CategoryName" Title="Name" Frozen="true" Width="160px" />
                    </Columns>
                </RadzenDataGrid>
                    <form method="post" asp-page-handler="AddCategory" class="col-12 border-top border-primary border-3 p-2">
                        <div class="input-group">
                            <input type="text" name="newCategoryName" class="form-control border-primary" />
                            <button type="submit" class="btn btn-outline-primary"><i class="fa-solid fa-circle-plus"></i> Add</button>
                        </div>
                    </form>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Warehouses">
                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                                Data="@Warehouses" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
                    <Columns>
                        <RadzenDataGridColumn Property="Id" Filterable="false" Title="ID" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn Property="WarehousName" Title="Name" Frozen="true" Width="160px" />
                    </Columns>
                </RadzenDataGrid>
                    <div class="col-12 border-top border-primary border-3 p-2">
                        <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#createWarehouse" aria-controls="createWarehouse"><i class="fa-solid fa-circle-plus"></i> Add</button>
                    </div>
               
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</div>

@using GreenPrint.Blazor.Service.Intefaces
@using GreenPrint.Blazor.Component
@inject ICategoryService _categoryService
@inject DialogService dialogService

@code {
    private List<Category> Categories { get; set; } = new();
    private List<Warehouse> Warehouses { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Categories = await _categoryService.GetAllCategoriesAsync();
        await base.OnInitializedAsync();
    }

    public async Task CreateItem()
    {
        await dialogService.OpenAsync<CreateItemDialogComponent>($"Create New Item",
               new Dictionary<string, object>() { },
               new DialogOptions() { Resizable = true, Draggable = true });
    }

}
